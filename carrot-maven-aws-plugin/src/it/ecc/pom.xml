<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.carrotgarden.base</groupId>
		<artifactId>carrot-archon</artifactId>
		<version>1.2.0</version>
		<relativePath />
	</parent>

	<artifactId>carrot-integrate-aws-ecc</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<description>verify cloud formation</description>

	<properties>

		<amazonRegion>us-west-2</amazonRegion>
		<stackName>${project.artifactId}</stackName>
		<imageName>${project.artifactId}-${carrotTimeFile}</imageName>

	</properties>

	<build>

		<plugins>

			<plugin>
				<groupId>com.carrotgarden.maven</groupId>
				<artifactId>carrot-maven-aws-plugin</artifactId>
				<version>@project.version@</version>
				<configuration>

					<amazonRegion>${amazonRegion}</amazonRegion>

					<stackServerId>com.carrotgarden.aws.stack</stackServerId>
					<stackTimeout>100</stackTimeout>

					<computeServerId>com.carrotgarden.aws.compute</computeServerId>
					<computeTimeout>300</computeTimeout>

				</configuration>
				<executions>

					<execution>
						<id>assert-stack-init</id>
						<phase>package</phase>
						<goals>
							<goal>groovy-execute-script</goal>
						</goals>
						<configuration>
							<groovyText>
							<![CDATA[
								def props = project.properties
								assert props["OutputInstanceId"] == null
								assert props["OutputInstanceDNS"] == null
							]]>
							</groovyText>
						</configuration>
					</execution>

					<execution>
						<id>stack-create</id>
						<phase>package</phase>
						<goals>
							<goal>cloud-formation-create</goal>
						</goals>
						<configuration>
							<stackName>${stackName}</stackName>
							<stackTemplateFile>./formation.template</stackTemplateFile>
						</configuration>
					</execution>

					<execution>
						<id>assert-stack-output</id>
						<phase>package</phase>
						<goals>
							<goal>groovy-execute-script</goal>
						</goals>
						<configuration>
							<groovyText>
							<![CDATA[
								def props = project.properties
								def OutputInstanceId =  props["OutputInstanceId"]
								def OutputInstanceDNS = props["OutputInstanceDNS"]
								assert OutputInstanceDNS != null
								assert OutputInstanceId != null
								println "### OutputInstanceId  = $OutputInstanceId"
								println "### OutputInstanceDNS = $OutputInstanceDNS"
							]]>
							</groovyText>
						</configuration>
					</execution>

					<execution>
						<id>ssh-execute</id>
						<phase>package</phase>
						<goals>
							<goal>secure-shell-execute</goal>
						</goals>
						<configuration>
							<sshHostProperty>OutputInstanceDNS</sshHostProperty>
							<sshPort>22</sshPort>
							<sshUser>ubuntu</sshUser>
							<sshKeyFile>${user.home}/.amazon/carrotgarden/keys/carrotgarden.pem</sshKeyFile>
							<sshConnectTimeout>5</sshConnectTimeout>
							<sshConnectRetries>10</sshConnectRetries>
							<sshCommand>touch "/tmp/test.file"</sshCommand>
							<sshStatusSuccess>
								<status>0</status>
							</sshStatusSuccess>
						</configuration>
					</execution>

					<execution>
						<id>image-create</id>
						<phase>package</phase>
						<goals>
							<goal>elastic-compute-image-create</goal>
						</goals>
						<configuration>
							<imageName>${imageName}</imageName>
							<imageInstanceIdProperty>OutputInstanceId</imageInstanceIdProperty>
						</configuration>
					</execution>

					<execution>
						<id>stack-delete</id>
						<phase>package</phase>
						<goals>
							<goal>cloud-formation-delete</goal>
						</goals>
						<configuration>
							<stackName>${stackName}</stackName>
						</configuration>
					</execution>

					<execution>
						<id>stack-find-delete</id>
						<phase>package</phase>
						<goals>
							<goal>cloud-formation-find-stack</goal>
						</goals>
						<configuration>
							<stackName>${stackName}</stackName>
						</configuration>
					</execution>

					<execution>
						<id>assert-stack-done</id>
						<phase>package</phase>
						<goals>
							<goal>groovy-execute-script</goal>
						</goals>
						<configuration>
							<groovyText>
							<![CDATA[
								def stack = project.properties["amazonStack"]
								assert stack == null
							]]>
							</groovyText>
						</configuration>
					</execution>

					<execution>
						<id>image-delete</id>
						<phase>package</phase>
						<goals>
							<goal>elastic-compute-image-delete</goal>
						</goals>
						<configuration>
							<imageIdProperty>amazonImageId</imageIdProperty>
						</configuration>
					</execution>

				</executions>
			</plugin>

		</plugins>

	</build>

</project>
