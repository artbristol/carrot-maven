
About

* Purpose

   this plugin replaces popular 
   {{{http://felix.apache.org/site/scr-annotations.html}felix scr annotations framework}}
   components, 
   
   including
   {{{http://search.maven.org/#search%7Cga%7C1%7Corg.apache.felix.scr}osgi annotations, annotations processor, annotations maven plugin}}
   
   with new OSGI 
   {{{http://www.osgi.org/download/osgi-early-draft-2011-09.pdf}specification compliant (p 187)}}
   counterparts.
   
* Motivation   

	felix scr annotations framework does not integrate well with eclipse 
	interactive development mode:
	
	* slow
	
	* batch mode only
	
	* no incremental build
	
	* builds single monolititc descriptor file
	
* M2E Integration

	this plugin comes with a companion m2e
	{{{https://github.com/carrot-garden/carrot-eclipse/tree/master/com.carrotgarden.m2e/com.carrotgarden.m2e.scr}maven/eclipse connector}} 
 	plugin
 	   
	available form the following
	{{{http://carrot-garden.github.com/carrot-eclipse/repository/com.carrotgarden.m2e.scr-LATEST/}update site}}
	location
	
	when both maven plugin and eclipse plugin are properly installed,
	you should see the following picture in 
	
	Eclipse -> Project -> Properties -> Maven -> Lifecycle Mapping
	
[images/carrot-garden-scr-m2e-lifecycle-mapping.png] Lifecycle Mapping	


* Eclipse Maven Console

	to verify incremental build in eclipse, you can activate 

	Eclipse -> Window -> Show View -> Console -> Maven Console
	
	then make changes and save java class file with @Component annotation;
	
	now you should see scr xml descriptor displayed in the maven console: 
	
[images/carrot-garden-scr-m2e-maven-console.png] Eclipse Maven Console	
